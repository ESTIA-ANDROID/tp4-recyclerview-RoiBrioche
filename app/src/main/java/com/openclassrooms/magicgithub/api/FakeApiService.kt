package com.openclassrooms.magicgithub.api

import com.openclassrooms.magicgithub.model.User
import java.util.Collections

class FakeApiService : ApiService {
    private var _users = FakeApiServiceGenerator.FAKE_USERS

    /**
     * Return a list of [User]
     * Those users must be generated by [FakeApiServiceGenerator]
     */
    override fun getUsers(): List<User> {
        // Retourner une liste factice d'utilisateurs
        return _users
    }

    /**
     * Generate a random [User] and add it to the [FakeApiService.users] list.
     * This user must be get from the [FakeApiServiceGenerator.FAKE_USERS_RANDOM] list.
     */
    override fun addRandomUser() {
        // Choisir un utilisateur aléatoire depuis la liste FAKE_USERS_RANDOM
        val randomUser = FakeApiServiceGenerator.FAKE_USERS_RANDOM.random()

        // Ajouter l'utilisateur directement à la liste des utilisateurs (_users)
        _users.add(randomUser)
    }

    /**
     * Delete a [User] from the [FakeApiService.users] list.
     */
    override fun deleteUser(user: User) {
        // Retirer l'utilisateur de la liste en fonction de son ID
        _users = _users.filter { it.id != user.id }.toMutableList()
    }

    override fun updateUser(user: User) {
        val index = _users.indexOfFirst { it.id == user.id }
        if (index != -1) {
            _users[index] = user
        }
    }

    override fun swapUsers(user1: User, user2: User) {
        val index1 = _users.indexOfFirst { it.id == user1.id }
        val index2 = _users.indexOfFirst { it.id == user2.id }

        if (index1 != -1 && index2 != -1) {
            Collections.swap(_users, index1, index2)
        }
    }

}